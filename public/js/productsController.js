/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/productsController.js":
/*!********************************************!*\
  !*** ./resources/js/productsController.js ***!
  \********************************************/
/***/ (() => {

eval("$(document).ready(function () {\n  $('#category').change(function (e) {\n    updateSubcategoriesSelect(e.target);\n  }); // updateSubcategoriesSelect(e.target, false)\n\n  updateCategoriesOnPanel();\n  updateAttributesOnPanel(); //images control, add image to DOM and remove when deleted\n\n  var imageInputs = $('#images input');\n  imageInputs.each(function (i, element) {\n    var imageDeleteButtons = $('#images .delete-image');\n    imageDeleteButtons.each(function (index, element) {\n      $(element).click(function () {\n        $($(element).parent().parent().find('input').get(0)).val(\"\");\n        $(element).parent().remove();\n      });\n    });\n    $(element).change(function () {\n      var file = element.files[0];\n\n      if (file) {\n        var reader = new FileReader();\n\n        reader.onload = function () {\n          if ($(element).parent().parent().find('.image-container').length === 0) {\n            $($(\".images-input-container\").get(i)).append(\"\\n                            <div class=\\\"image-container w-100\\\">\\n                                <div class=\\\"delete-image my-2 btn btn-danger d-none\\\"><i class=\\\"bi bi-x\\\"></i> remove </div>\\n                                <img\\n                                        src=\\\"\".concat(reader.result, \"\\\"\\n                                        alt=\\\"image 2\\\"\\n                                        class=\\\"w-100 mt-3\\\">\\n                            </div>\\n                        \"));\n          } else {\n            $($(element).parent().parent().find('img').get(0)).attr('src', reader.result);\n          }\n\n          imageDeleteButtons = $('#images .delete-image');\n          imageDeleteButtons.each(function (index, element) {\n            $(element).click(function () {\n              $($(element).parent().parent().find('input').get(0)).val(\"\");\n              $(element).parent().remove();\n            });\n          });\n        };\n\n        reader.readAsDataURL(file);\n      }\n    });\n  });\n});\nvar addCategory_button = $('#addCategory');\nvar addAttribute_button = $('#addAttribute');\nvar removeCategories_button = $('#removeCategories');\nvar removeAttributes_button = $('#removeAttributes');\nvar submit_form = $('#mainForm');\nvar submit_button = $('#submit');\nsubmit_form.submit(function () {\n  var hidden = $(\"<input type='hidden' name='characteristicsJson'/>\");\n  hidden.val(getCharacteristicsJson());\n  submit_form.append(hidden);\n});\n\nfunction updateSubcategoriesSelect(element, isFirst) {\n  $.ajax({\n    url: '/api/getSubcategoriesJson',\n    method: 'GET',\n    data: {\n      'categories[]': $(element).val()\n    }\n  }).done(function (data) {\n    $('#subcategory').empty();\n    data.forEach(function (item) {\n      $('#subcategory').append(\"\\n                <option value=\\\"\".concat(item['id'], \"\\\">\").concat(item['subcategory'], \"</option>\\n            \"));\n    });\n  });\n} //add Category on button click --> event\n\n\naddCategory_button.click(function () {\n  var canSubmit_input_validate = true;\n  var canSubmit_similar_element = true;\n  var canSubmit;\n  var category_en = $('#addCategory-en').val().trim();\n  var category_ka = $('#addCategory-ka').val().trim();\n  var category_ru = $('#addCategory-ru').val().trim();\n  $('#addCategoryGroup input').each(function (index, element) {\n    return canSubmit_input_validate = $(element).val().trim() !== \"\";\n  });\n  $('#mainCategoryContainer .accordion-header').each(function (index, element) {\n    return canSubmit_similar_element = $(element).text().trim() !== category_en;\n  });\n  canSubmit = canSubmit_similar_element && canSubmit_input_validate;\n\n  if (canSubmit) {\n    addCategory(category_en, category_ka, category_ru);\n    $('#addCategoryGroup input').each(function (index, element) {\n      return $(element).val(\"\");\n    });\n  }\n}); //add attribute on button click --> event\n\naddAttribute_button.click(function () {\n  var canSubmit_input_validate = true;\n  var canSubmit_similar_element = true;\n  var canSubmit;\n  var category_en = $('#selectCategory :selected').val();\n  var attribute_en = $('#addAttribute-en').val().trim();\n  var attribute_ka = $('#addAttribute-ka').val().trim();\n  var attribute_ru = $('#addAttribute-ru').val().trim();\n  $('#addAttributeGroup input').each(function (index, element) {\n    return canSubmit_input_validate = $(element).val().trim() !== \"\";\n  });\n  $('.attribute-header').each(function (index, element) {\n    return canSubmit_similar_element = $(element).text().trim() !== attribute_en;\n  });\n  canSubmit = canSubmit_similar_element && canSubmit_input_validate;\n\n  if (canSubmit) {\n    addAttribute(category_en, attribute_en, attribute_ka, attribute_ru);\n    $('#addAttributeGroup input').each(function (index, element) {\n      return $(element).val(\"\");\n    });\n  }\n});\nremoveCategories_button.click(function () {\n  var categoriesList = $('#categoriesToRemove > div');\n  var attributeId;\n  var categoryId;\n  categoriesList.each(function (index, element) {\n    categoryId = $(element).attr('id').split('_');\n    categoryId.pop(); //remove attributes\n\n    $('#AddToRemovableAttributesList div').each(function (index, element) {\n      attributeId = $(element).attr('id').split('_');\n      attributeId.pop();\n\n      if ($(\"#\".concat(attributeId.join('_'))).closest('.accordion-item').attr('id').replace('#', '') === categoryId.join('_')) {\n        $(element).remove();\n      }\n    });\n    $('#attributesToRemove div').each(function (index, element) {\n      attributeId = $(element).attr('id').split('_');\n      attributeId.pop();\n\n      if ($(\"#\".concat(attributeId.join('_'))).closest('.accordion-item').attr('id').replace('#', '') === categoryId.join('_')) {\n        $(element).remove();\n      }\n    });\n    removeCategory(\"#\".concat(categoryId.join(\"_\")));\n    $(element).remove();\n  });\n});\nremoveAttributes_button.click(function () {\n  var attributesList = $('#attributesToRemove > div').remove();\n  attributesList.each(function (index, element) {\n    var attributeId = $(element).attr('id').split('_');\n    attributeId.pop();\n    console.log(attributeId.join(\"_\"));\n    removeAttribute(\"#\".concat(attributeId.join(\"_\")));\n    console.log(element);\n    $(element).remove();\n  });\n}); //add categories to removable list\n\nfunction updateCategoriesToRemoveListListener() {\n  //add categories to removable list\n  var categoriesList = $('#addToRemovableCategoriesList > div');\n  categoriesList.each(function (index, element) {\n    $(element).unbind('click');\n    $(element).click(function (category) {\n      if ($(category.currentTarget).parent().attr('id') === 'addToRemovableCategoriesList') {\n        $($(category.currentTarget).find('i').get(0)).attr('class', 'bi bi-dash-lg');\n        $('#categoriesToRemove').append(category.currentTarget);\n      } else if ($($(category.currentTarget).parent().attr('id') === 'categoriesToRemove')) {\n        $($(category.currentTarget).find('i').get(0)).attr('class', 'bi bi-plus-lg');\n        $('#addToRemovableCategoriesList').append(category.currentTarget);\n      }\n    });\n  });\n} //add attributes to removable list\n\n\nfunction updateAttributesToRemoveListListener() {\n  //add categories to removable list\n  var attributesList = $('#AddToRemovableAttributesList > div');\n  attributesList.each(function (index, element) {\n    $(element).unbind('click');\n    $(element).click(function (attribute) {\n      if ($(attribute.currentTarget).parent().attr('id') === 'AddToRemovableAttributesList') {\n        $($(attribute.currentTarget).find('i').get(0)).attr('class', 'bi bi-dash-lg');\n        $('#attributesToRemove').append(attribute.currentTarget);\n      } else if ($($(attribute.currentTarget).parent().attr('id') === 'attributesToRemove')) {\n        $($(attribute.currentTarget).find('i').get(0)).attr('class', 'bi bi-plus-lg');\n        $('#AddToRemovableAttributesList').append(attribute.currentTarget);\n      }\n    });\n  });\n} //add category function\n\n\nfunction addCategory(nameInEn, nameInKa, nameInRu) {\n  $('#mainCategoryContainer').append(categoryHtml(nameInEn, nameInKa, nameInRu));\n  $('#addToRemovableCategoriesList').append(\"\\n        <div id=\\\"\".concat(nameInEn.replaceAll(\" \", \"_\"), \"_removeCategory\\\" class=\\\"btn btn-outline-info text-black-50 m-1\\\"> <i class=\\\"bi bi-plus-lg\\\"></i> \").concat(nameInEn, \"  </div>\\n    \"));\n  $('#selectCategory').append(new Option(nameInEn, nameInEn.replaceAll(\" \", \"_\")));\n  updateCategoriesToRemoveListListener();\n}\n\nfunction removeCategory(selector) {\n  console.log(selector);\n  $(selector).remove();\n  $($(\"#selectCategory option[value = '\".concat(selector.replace('#', ''), \"']\")).get(0)).remove();\n} //add attribute function\n\n\nfunction addAttribute(category_en, nameInEn, nameInKa, nameInRu) {\n  $('#' + category_en + '_body').append(attributeHtml(nameInEn, nameInKa, nameInRu));\n  $('#AddToRemovableAttributesList').append(\"\\n        <div id=\\\"\".concat(nameInEn.replaceAll(\" \", \"_\"), \"_removeAttribute\\\" class=\\\"btn btn-outline-info text-black-50 m-1\\\"> <i class=\\\"bi bi-plus-lg\\\"></i> \").concat(nameInEn, \"  </div>\\n    \"));\n  updateAttributesToRemoveListListener();\n}\n\nfunction removeAttribute(attributeSelector) {\n  $(attributeSelector).remove();\n} //return formatted category html\n\n\nfunction categoryHtml(en, ka, ru) {\n  var category = en.trim().replaceAll(\" \", \"_\");\n  var categoryHeaderId = category + \"_header\";\n  var categoryBodyId = category + \"_body\";\n  return \"\\n        <div id=\\\"\".concat(category, \"\\\" class=\\\"accordion-item\\\">\\n            <h4 class=\\\"accordion-header\\\" id=\\\"\").concat(categoryHeaderId, \"\\\">\\n                <button class=\\\"accordion-button collapsed\\\" type=\\\"button\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#\").concat(categoryBodyId, \"_container\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"\").concat(categoryBodyId, \"_container\\\">\\n                    \").concat(en, \"\\n                </button>\\n                <input type=\\\"hidden\\\" data-parent=\\\"\").concat(category, \"\\\" data-language=\\\"ka\\\" name=\\\"\").concat(category, \"_ka\\\" value=\\\"\").concat(ka, \"\\\">\\n                <input type=\\\"hidden\\\" data-parent=\\\"\").concat(category, \"\\\" data-language=\\\"en\\\" name=\\\"\").concat(category, \"_en\\\" value=\\\"\").concat(en, \"\\\">\\n                <input type=\\\"hidden\\\" data-parent=\\\"\").concat(category, \"\\\" data-language=\\\"ru\\\" name=\\\"\").concat(category, \"_ru\\\" value=\\\"\").concat(ru, \"\\\">\\n            </h4>\\n            <div id=\\\"\").concat(categoryBodyId, \"_container\\\" class=\\\"accordion-collapse collapse\\\" aria-labelledby=\\\"\").concat(categoryHeaderId, \"\\\" data-bs-parent=\\\"#mainCategoryContainer\\\">\\n                <div id=\\\"\").concat(categoryBodyId, \"\\\" class=\\\"accordion-body\\\">\\n                    \\n                </div>\\n            </div>\\n        </div>\\n    \");\n} //return formatted attribute html\n\n\nfunction attributeHtml(en, ka, ru) {\n  var attribute = en.trim().replaceAll(\" \", \"_\");\n  return \"\\n        <div id=\\\"\".concat(attribute, \"\\\" class=\\\"row py-1 my-4 align-items-center\\\">\\n            <div class=\\\"attribute-header col-3\\\">\\n                <span class=\\\"fs-5 text-wrap attribute-header\\\">\").concat(en, \"</span>\\n                <input type=\\\"hidden\\\" data-language=\\\"ka\\\" name=\\\"\").concat(attribute, \"_ka\\\" value=\\\"\").concat(ka, \"\\\">\\n                <input type=\\\"hidden\\\" data-language=\\\"en\\\" name=\\\"\").concat(attribute, \"_en\\\" value=\\\"\").concat(en, \"\\\">\\n                <input type=\\\"hidden\\\" data-language=\\\"ru\\\" name=\\\"\").concat(attribute, \"_ru\\\" value=\\\"\").concat(ru, \"\\\">\\n            </div>\\n\\n            <div class=\\\"attribute-body col d-flex flex-column text-center pb-3 border-bottom\\\">\\n                <label class=\\\"d-flex flex-row align-items-center\\\">\\n                    <span class=\\\"px-3\\\">ka</span>\\n                    <input type=\\\"text\\\" class=\\\"form-control my-1\\\" data-language=\\\"ka\\\" name=\\\"\").concat(attribute, \"_ka\\\">\\n                </label>\\n\\n                <label class=\\\"d-flex flex-row align-items-center\\\">\\n                    <span class=\\\"px-3\\\">en</span>\\n                    <input type=\\\"text\\\" class=\\\"form-control my-1\\\" data-language=\\\"en\\\" name=\\\"\").concat(attribute, \"_en\\\">\\n                </label>\\n\\n                <label class=\\\"d-flex flex-row align-items-center\\\">\\n                    <span class=\\\"px-3\\\">ru</span>\\n                    <input type=\\\"text\\\" class=\\\"form-control my-1\\\" data-language=\\\"ru\\\" name=\\\"\").concat(attribute, \"_ru\\\">\\n                </label>\\n            </div>\\n        </div>\\n    \");\n}\n\nfunction updateCategoriesOnPanel() {\n  var nameInEn;\n  $('#mainCategoryContainer .accordion-item').each(function (index, element) {\n    nameInEn = $(element).attr('id');\n    $('#addToRemovableCategoriesList').append(\"\\n            <div id=\\\"\".concat(nameInEn, \"_removeCategory\\\" class=\\\"btn btn-outline-info text-black-50 m-1\\\"> <i class=\\\"bi bi-plus-lg\\\"></i> \").concat(nameInEn, \"  </div>\\n        \"));\n    $('#selectCategory').append(new Option(nameInEn, nameInEn));\n  });\n  updateCategoriesToRemoveListListener();\n}\n\nfunction updateAttributesOnPanel() {\n  var nameInEn;\n  $('#mainCategoryContainer .accordion-item').each(function (categoryIndex, categoryElement) {\n    $(categoryElement).find('.accordion-body > div').each(function (attributeIndex, attributeElement) {\n      nameInEn = $(attributeElement).attr('id').replaceAll(\" \", \"_\");\n      $('#AddToRemovableAttributesList').append(\"\\n                <div id=\\\"\".concat(nameInEn, \"_removeAttribute\\\" class=\\\"btn btn-outline-info text-black-50 m-1\\\"> <i class=\\\"bi bi-plus-lg\\\"></i> \").concat(nameInEn, \"  </div>\\n            \"));\n    });\n  });\n  updateAttributesToRemoveListListener();\n}\n\nfunction getCharacteristicsJson() {\n  var data = [];\n  var attributesData;\n  $('#mainCategoryContainer .accordion-item').each(function (index, element) {\n    data[index] = {\n      'name': $(element).attr('id'),\n      'lang': {\n        'ka': $(element).find(\".accordion-header input[data-language = 'ka']\").attr('value'),\n        'en': $(element).find(\".accordion-header input[data-language = 'en']\").attr('value'),\n        'ru': $(element).find(\".accordion-header input[data-language = 'ru']\").attr('value')\n      }\n    };\n    attributesData = [];\n    $(element).find($(element).find(\"#\".concat($(element).attr('id'), \"_body > div\"))).each(function (attributeIndex, attributeElement) {\n      attributesData.push({\n        'name': $(attributeElement).attr('id'),\n        'lang': {\n          'ka': $(attributeElement).find(\".attribute-header input[data-language = 'ka']\").attr('value'),\n          'en': $(attributeElement).find(\".attribute-header input[data-language = 'en']\").attr('value'),\n          'ru': $(attributeElement).find(\".attribute-header input[data-language = 'ru']\").attr('value')\n        },\n        'value': {\n          'ka': $(attributeElement).find(\".attribute-body input[data-language = 'ka']\").val(),\n          'en': $(attributeElement).find(\".attribute-body input[data-language = 'en']\").val(),\n          'ru': $(attributeElement).find(\".attribute-body input[data-language = 'ru']\").val()\n        }\n      });\n    });\n    data[index]['attributes'] = attributesData;\n  });\n  return JSON.stringify(data);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/productsController.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/productsController.js"]();
/******/ 	
/******/ })()
;